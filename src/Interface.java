
import com.sun.glass.events.KeyEvent;
import java.awt.Color;
import java.awt.TextArea;
import javax.swing.JOptionPane;


public class Interface extends javax.swing.JFrame {

    int mantemCaps;
    int indice; //variável para contar erros e acertos (método "Caret update")
    Pangrama pangrama; //instancia o pangrama
    Color corOriginal; //instancia cor

    char pangr, //variáveis do método Caret update
         escrito;
    int tamanhoTA,
        acerto,
        erro;
    float porcentagemAcerto;
    
    boolean backspace; //variável para verificar se o backspace foi pressionado
    
    
    public Interface() {//contrutor da interface
        initComponents(); 
        pangrama = new Pangrama(); //instancia pangrama
        textoPangrama.setText(pangrama.getPangrama());
        corOriginal = teclaA.getBackground();  //salva cor original das teclas
        mantemCaps = 0; //começa programa com caps lock não pressionado
        indice = 0;          
        acerto= 0;
        erro = 0;
        backspace = false; //programa começa com Espaço não pressionado
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        teclaCCedilha = new javax.swing.JButton();
        teclaL = new javax.swing.JButton();
        teclaK = new javax.swing.JButton();
        teclaJ = new javax.swing.JButton();
        teclaH = new javax.swing.JButton();
        teclaG = new javax.swing.JButton();
        teclaF = new javax.swing.JButton();
        teclaD = new javax.swing.JButton();
        teclaS = new javax.swing.JButton();
        teclaA = new javax.swing.JButton();
        teclaM = new javax.swing.JButton();
        teclaN = new javax.swing.JButton();
        teclaB = new javax.swing.JButton();
        teclaV = new javax.swing.JButton();
        teclaC = new javax.swing.JButton();
        teclaX = new javax.swing.JButton();
        teclaZ = new javax.swing.JButton();
        teclaCapsLock = new javax.swing.JButton();
        teclaVirgula = new javax.swing.JButton();
        teclaEspaco = new javax.swing.JButton();
        teclaShift = new javax.swing.JButton();
        teclaCtrl = new javax.swing.JButton();
        teclaAlt = new javax.swing.JButton();
        teclaEnter = new javax.swing.JButton();
        teclaQ = new javax.swing.JButton();
        teclaW = new javax.swing.JButton();
        teclaE = new javax.swing.JButton();
        teclaR = new javax.swing.JButton();
        teclaT = new javax.swing.JButton();
        teclaY = new javax.swing.JButton();
        teclaU = new javax.swing.JButton();
        teclaI = new javax.swing.JButton();
        teclaO = new javax.swing.JButton();
        teclaP = new javax.swing.JButton();
        teclaTab = new javax.swing.JButton();
        tecla1 = new javax.swing.JButton();
        tecla2 = new javax.swing.JButton();
        tecla3 = new javax.swing.JButton();
        tecla4 = new javax.swing.JButton();
        tecla5 = new javax.swing.JButton();
        tecla6 = new javax.swing.JButton();
        tecla7 = new javax.swing.JButton();
        tecla8 = new javax.swing.JButton();
        tecla9 = new javax.swing.JButton();
        tecla0 = new javax.swing.JButton();
        teclaHifen = new javax.swing.JButton();
        teclaBackspace = new javax.swing.JButton();
        teclaAspas = new javax.swing.JButton();
        teclaPonto = new javax.swing.JButton();
        teclaInterrogacao = new javax.swing.JButton();
        teclaSetaBaixo = new javax.swing.JButton();
        teclaSetaEsquerda = new javax.swing.JButton();
        teclaSetaDireita = new javax.swing.JButton();
        teclaSetaCima = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();
        textoPangrama = new javax.swing.JLabel();
        acao = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        teclaCCedilha.setText("Ç");
        teclaCCedilha.setAlignmentY(0.0F);
        teclaCCedilha.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaCCedilha.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaL.setText("L");
        teclaL.setAlignmentY(0.0F);
        teclaL.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaL.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaK.setText("K");
        teclaK.setAlignmentY(0.0F);
        teclaK.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaK.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaJ.setText("J");
        teclaJ.setAlignmentY(0.0F);
        teclaJ.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaJ.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaH.setText("H");
        teclaH.setAlignmentY(0.0F);
        teclaH.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaH.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaG.setText("G");
        teclaG.setAlignmentY(0.0F);
        teclaG.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaG.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaF.setText("F");
        teclaF.setAlignmentY(0.0F);
        teclaF.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaF.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaD.setText("D");
        teclaD.setAlignmentY(0.0F);
        teclaD.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaD.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaS.setText("S");
        teclaS.setAlignmentY(0.0F);
        teclaS.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaS.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaA.setText("A");
        teclaA.setAlignmentY(0.0F);
        teclaA.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaA.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaM.setText("M");
        teclaM.setAlignmentY(0.0F);
        teclaM.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaM.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaN.setText("N");
        teclaN.setAlignmentY(0.0F);
        teclaN.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaN.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaB.setText("B");
        teclaB.setAlignmentY(0.0F);
        teclaB.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaB.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaV.setText("V");
        teclaV.setAlignmentY(0.0F);
        teclaV.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaV.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaC.setText("C");
        teclaC.setAlignmentY(0.0F);
        teclaC.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaC.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaX.setText("X");
        teclaX.setAlignmentY(0.0F);
        teclaX.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaX.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaZ.setText("Z");
        teclaZ.setAlignmentY(0.0F);
        teclaZ.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaZ.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaCapsLock.setText("Caps Lock");
        teclaCapsLock.setAlignmentY(0.0F);
        teclaCapsLock.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaCapsLock.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaVirgula.setText(",");
        teclaVirgula.setAlignmentY(0.0F);
        teclaVirgula.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaVirgula.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaEspaco.setText("Espaço");
        teclaEspaco.setAlignmentY(0.0F);
        teclaEspaco.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaEspaco.setMinimumSize(new java.awt.Dimension(15, 15));
        teclaEspaco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teclaEspacoActionPerformed(evt);
            }
        });

        teclaShift.setText("Shift");
        teclaShift.setAlignmentY(0.0F);
        teclaShift.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaShift.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaCtrl.setText("Ctrl");
        teclaCtrl.setAlignmentY(0.0F);
        teclaCtrl.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaCtrl.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaAlt.setText("Alt");
        teclaAlt.setAlignmentY(0.0F);
        teclaAlt.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaAlt.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaEnter.setText("Enter");
        teclaEnter.setAlignmentY(0.0F);
        teclaEnter.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaEnter.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaQ.setText("Q");
        teclaQ.setAlignmentY(0.0F);
        teclaQ.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaQ.setMinimumSize(new java.awt.Dimension(15, 15));
        teclaQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teclaQActionPerformed(evt);
            }
        });

        teclaW.setText("W");
        teclaW.setAlignmentY(0.0F);
        teclaW.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaW.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaE.setText("E");
        teclaE.setAlignmentY(0.0F);
        teclaE.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaE.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaR.setText("R");
        teclaR.setAlignmentY(0.0F);
        teclaR.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaR.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaT.setText("T");
        teclaT.setAlignmentY(0.0F);
        teclaT.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaT.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaY.setText("Y");
        teclaY.setAlignmentY(0.0F);
        teclaY.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaY.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaU.setText("U");
        teclaU.setAlignmentY(0.0F);
        teclaU.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaU.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaI.setText("I");
        teclaI.setAlignmentY(0.0F);
        teclaI.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaI.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaO.setText("O");
        teclaO.setAlignmentY(0.0F);
        teclaO.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaO.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaP.setText("P");
        teclaP.setAlignmentY(0.0F);
        teclaP.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaP.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaTab.setText("Tab");
        teclaTab.setAlignmentY(0.0F);
        teclaTab.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaTab.setMinimumSize(new java.awt.Dimension(15, 15));

        tecla1.setText("1");
        tecla1.setAlignmentY(0.0F);
        tecla1.setMaximumSize(new java.awt.Dimension(15, 15));
        tecla1.setMinimumSize(new java.awt.Dimension(15, 15));
        tecla1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tecla1ActionPerformed(evt);
            }
        });

        tecla2.setText("2");
        tecla2.setAlignmentY(0.0F);
        tecla2.setMaximumSize(new java.awt.Dimension(15, 15));
        tecla2.setMinimumSize(new java.awt.Dimension(15, 15));
        tecla2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tecla2ActionPerformed(evt);
            }
        });

        tecla3.setText("3");
        tecla3.setAlignmentY(0.0F);
        tecla3.setMaximumSize(new java.awt.Dimension(15, 15));
        tecla3.setMinimumSize(new java.awt.Dimension(15, 15));
        tecla3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tecla3ActionPerformed(evt);
            }
        });

        tecla4.setText("4");
        tecla4.setAlignmentY(0.0F);
        tecla4.setMaximumSize(new java.awt.Dimension(15, 15));
        tecla4.setMinimumSize(new java.awt.Dimension(15, 15));
        tecla4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tecla4ActionPerformed(evt);
            }
        });

        tecla5.setText("5");
        tecla5.setAlignmentY(0.0F);
        tecla5.setMaximumSize(new java.awt.Dimension(15, 15));
        tecla5.setMinimumSize(new java.awt.Dimension(15, 15));
        tecla5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tecla5ActionPerformed(evt);
            }
        });

        tecla6.setText("6");
        tecla6.setAlignmentY(0.0F);
        tecla6.setMaximumSize(new java.awt.Dimension(15, 15));
        tecla6.setMinimumSize(new java.awt.Dimension(15, 15));
        tecla6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tecla6ActionPerformed(evt);
            }
        });

        tecla7.setText("7");
        tecla7.setAlignmentY(0.0F);
        tecla7.setMaximumSize(new java.awt.Dimension(15, 15));
        tecla7.setMinimumSize(new java.awt.Dimension(15, 15));
        tecla7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tecla7ActionPerformed(evt);
            }
        });

        tecla8.setText("8");
        tecla8.setAlignmentY(0.0F);
        tecla8.setMaximumSize(new java.awt.Dimension(15, 15));
        tecla8.setMinimumSize(new java.awt.Dimension(15, 15));
        tecla8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tecla8ActionPerformed(evt);
            }
        });

        tecla9.setText("9");
        tecla9.setAlignmentY(0.0F);
        tecla9.setMaximumSize(new java.awt.Dimension(15, 15));
        tecla9.setMinimumSize(new java.awt.Dimension(15, 15));
        tecla9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tecla9ActionPerformed(evt);
            }
        });

        tecla0.setText("0");
        tecla0.setAlignmentY(0.0F);
        tecla0.setMaximumSize(new java.awt.Dimension(15, 15));
        tecla0.setMinimumSize(new java.awt.Dimension(15, 15));
        tecla0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tecla0ActionPerformed(evt);
            }
        });

        teclaHifen.setText("-");
        teclaHifen.setAlignmentY(0.0F);
        teclaHifen.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaHifen.setMinimumSize(new java.awt.Dimension(15, 15));
        teclaHifen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teclaHifenActionPerformed(evt);
            }
        });

        teclaBackspace.setText("Backspace");
        teclaBackspace.setAlignmentY(0.0F);
        teclaBackspace.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaBackspace.setMinimumSize(new java.awt.Dimension(15, 15));
        teclaBackspace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teclaBackspaceActionPerformed(evt);
            }
        });

        teclaAspas.setText("'");
        teclaAspas.setAlignmentY(0.0F);
        teclaAspas.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaAspas.setMinimumSize(new java.awt.Dimension(15, 15));
        teclaAspas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teclaAspasActionPerformed(evt);
            }
        });

        teclaPonto.setText(".");
        teclaPonto.setAlignmentY(0.0F);
        teclaPonto.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaPonto.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaInterrogacao.setText("?");
        teclaInterrogacao.setAlignmentY(0.0F);
        teclaInterrogacao.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaInterrogacao.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaSetaBaixo.setText("˅");
        teclaSetaBaixo.setAlignmentY(0.0F);
        teclaSetaBaixo.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaSetaBaixo.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaSetaEsquerda.setText("<");
        teclaSetaEsquerda.setAlignmentY(0.0F);
        teclaSetaEsquerda.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaSetaEsquerda.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaSetaDireita.setText(">");
        teclaSetaDireita.setAlignmentY(0.0F);
        teclaSetaDireita.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaSetaDireita.setMinimumSize(new java.awt.Dimension(15, 15));

        teclaSetaCima.setText("^");
        teclaSetaCima.setAlignmentY(0.0F);
        teclaSetaCima.setMaximumSize(new java.awt.Dimension(15, 15));
        teclaSetaCima.setMinimumSize(new java.awt.Dimension(15, 15));

        jTextArea.setColumns(20);
        jTextArea.setRows(5);
        jTextArea.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextAreaCaretUpdate(evt);
            }
        });
        jTextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextAreaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextAreaKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTextArea);

        acao.setText("Gerar novo pangrama");
        acao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textoPangrama, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(teclaSetaCima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(teclaCtrl, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(teclaAlt, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(teclaEspaco, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(teclaSetaEsquerda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(teclaSetaBaixo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(teclaSetaDireita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(17, 17, 17))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(teclaShift, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(teclaZ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(teclaX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(teclaC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(teclaV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(teclaB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(teclaN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(teclaM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(teclaVirgula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(teclaPonto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(teclaInterrogacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(teclaCapsLock, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(teclaA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(teclaS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(teclaD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(teclaF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(teclaG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(teclaH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(teclaJ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(teclaK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(teclaL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(teclaCCedilha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(teclaTab, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(teclaQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(teclaW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(teclaE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(teclaR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(teclaT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(teclaY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(teclaU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(teclaI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(teclaO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(teclaP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(teclaAspas, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(tecla1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(tecla2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(tecla3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(tecla4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(tecla5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(tecla6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(tecla7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(tecla8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(tecla9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(tecla0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(teclaHifen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(teclaBackspace, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(teclaEnter, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addComponent(acao, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(14, 14, 14)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textoPangrama, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(acao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                            .addComponent(tecla1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tecla2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tecla3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tecla4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tecla5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tecla6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tecla7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tecla8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tecla9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tecla0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(teclaHifen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(teclaAspas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(teclaQ, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(teclaW, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(teclaE, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(teclaR, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(teclaT, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(teclaY, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(teclaU, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(teclaI, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(teclaO, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(teclaP, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(teclaTab, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(teclaA, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(teclaS, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(teclaD, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(teclaF, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(teclaG, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(teclaH, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(teclaJ, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(teclaK, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(teclaL, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(teclaCCedilha, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(teclaCapsLock, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(teclaBackspace, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(teclaEnter, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(teclaZ, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(teclaX, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(teclaC, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(teclaV, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(teclaB, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(teclaN, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(teclaM, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(teclaVirgula, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(teclaShift, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(teclaPonto, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(teclaInterrogacao, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(teclaSetaCima, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(teclaCtrl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(teclaAlt, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(teclaSetaBaixo, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(teclaSetaEsquerda, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(teclaSetaDireita, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(teclaEspaco, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void teclaEspacoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teclaEspacoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teclaEspacoActionPerformed

    private void teclaQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teclaQActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teclaQActionPerformed

    private void tecla1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tecla1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tecla1ActionPerformed

    private void tecla2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tecla2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tecla2ActionPerformed

    private void tecla3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tecla3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tecla3ActionPerformed

    private void tecla4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tecla4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tecla4ActionPerformed

    private void tecla5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tecla5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tecla5ActionPerformed

    private void tecla6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tecla6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tecla6ActionPerformed

    private void tecla7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tecla7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tecla7ActionPerformed

    private void tecla8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tecla8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tecla8ActionPerformed

    private void tecla9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tecla9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tecla9ActionPerformed

    private void tecla0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tecla0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tecla0ActionPerformed

    private void teclaHifenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teclaHifenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teclaHifenActionPerformed

    private void teclaBackspaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teclaBackspaceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teclaBackspaceActionPerformed

    private void teclaAspasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teclaAspasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teclaAspasActionPerformed

    private void acaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acaoActionPerformed
        textoPangrama.setText(pangrama.getPangrama());  //se botão de gerar pangrama for acionado, gera pangrama aleatório
        
        if (!jTextArea.isEnabled()) //verifica se a tela não está habilitada
        {
            jTextArea.setEnabled(true);  //habilita a tela
        }
        jTextArea.setText("");  //limpa a tela
        
        erro = 0;    //reinicia os erros, acertos e o índice ao gerar novo pangrama
        acerto = 0;
        indice = 0;
    }//GEN-LAST:event_acaoActionPerformed

// tecla = evt
    private void jTextAreaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextAreaKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_TAB) //verificação da tecla pressionada (verificando se TAB foi pressionado)
        {
            teclaTab.setBackground(Color.red); //muda cor da tecla para vermelho
        }
        
        if(evt.getKeyCode() == KeyEvent.VK_CAPS_LOCK) //verificando se caps lock foi pressionado
        {            
            if (mantemCaps == 0) //verifica se Caps lock não foi pressionado
            {
                mantemCaps = 1; //se foi pressionado, muda para 1
                teclaCapsLock.setBackground(Color.red);  //muda a cor da tecla para vermelho
            }
            else
            {             
                mantemCaps = 0; 
                teclaCapsLock.setBackground(corOriginal);
            }      
        }
        
        if(evt.getKeyCode() == KeyEvent.VK_SHIFT)
        {
            teclaShift.setBackground(Color.red);
        }
        
        if(evt.getKeyCode() == KeyEvent.VK_CONTROL)
        {
            teclaCtrl.setBackground(Color.red);
        }
        
        if(evt.getKeyCode() == KeyEvent.VK_ALT)
        {
            teclaAlt.setBackground(Color.red);
        }       
        
        if(evt.getKeyCode() == KeyEvent.VK_BACKSPACE)
        {
            teclaBackspace.setBackground(Color.red);
            backspace = true;
        }
        else{
            backspace = false;
        }
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            teclaEnter.setBackground(Color.red);
        }
        
        if(evt.getKeyCode() == KeyEvent.VK_UP)
        {
            teclaSetaCima.setBackground(Color.red);
        }
        
        if(evt.getKeyCode() == KeyEvent.VK_RIGHT)
        {
            teclaSetaDireita.setBackground(Color.red);
        }
        
        if(evt.getKeyCode() == KeyEvent.VK_DOWN)
        {
            teclaSetaBaixo.setBackground(Color.red);
        }
        
        if(evt.getKeyCode() == KeyEvent.VK_LEFT)
        {
            teclaSetaEsquerda.setBackground(Color.red);
        }
        
        if(evt.getKeyChar() == '\'')
        {
            teclaAspas.setBackground(Color.red);
        } 
        
        if(evt.getKeyChar() == '1')
        {
            tecla1.setBackground(Color.red);
        }
        
        if(evt.getKeyChar() == '2')
        {
            tecla2.setBackground(Color.red);
        }
        
        if(evt.getKeyChar() == '3')
        {
            tecla3.setBackground(Color.red);
        }
        
        if(evt.getKeyChar() == '4')
        {
            tecla4.setBackground(Color.red);
        }
        
        if(evt.getKeyChar() == '5')
        {
            tecla5.setBackground(Color.red);
        }
        
        if(evt.getKeyChar() == '6')
        {
            tecla6.setBackground(Color.red);
        }
        
        if(evt.getKeyChar() == '7')
        {
            tecla7.setBackground(Color.red);
        }
        
        if(evt.getKeyChar() == '8')
        {
            tecla8.setBackground(Color.red);
        }
        
        if(evt.getKeyChar() == '9')
        {
            tecla9.setBackground(Color.red);
        }
        
        if(evt.getKeyChar() == '0')
        {
            tecla0.setBackground(Color.red);
        }
        
        if(evt.getKeyChar() == 'q' || evt.getKeyChar() == 'Q')
        {
            teclaQ.setBackground(Color.red);
        } 
        
        if(evt.getKeyChar() == '-')
        {
            teclaHifen.setBackground(Color.red);
        }
        
        if(evt.getKeyChar() == 'w' || evt.getKeyChar() == 'W')
        {
            teclaW.setBackground(Color.red);
        } 
        
        if(evt.getKeyChar() == 'e' || evt.getKeyChar() == 'E')
        {
            teclaE.setBackground(Color.red);
        } 
        
        if(evt.getKeyChar() == 'r' || evt.getKeyChar() == 'R')
        {
            teclaR.setBackground(Color.red);
        } 
        
        if(evt.getKeyChar() == 't' || evt.getKeyChar() == 'T')
        {
            teclaT.setBackground(Color.red);
        } 
        
        if(evt.getKeyChar() == 'y' || evt.getKeyChar() == 'Y')
        {
            teclaY.setBackground(Color.red);
        } 
        
        if(evt.getKeyChar() == 'u' || evt.getKeyChar() == 'U')
        {
            teclaU.setBackground(Color.red);
        } 
        
        if(evt.getKeyChar() == 'i' || evt.getKeyChar() == 'I')
        {
            teclaI.setBackground(Color.red);
        } 
        
        if(evt.getKeyChar() == 'o' || evt.getKeyChar() == 'o')
        {
            teclaO.setBackground(Color.red);
        } 
        
        if(evt.getKeyChar() == 'p' || evt.getKeyChar() == 'P')
        {
            teclaP.setBackground(Color.red);
        } 
        
        if(evt.getKeyChar() == 'a' || evt.getKeyChar() == 'A')
        {
            teclaA.setBackground(Color.red);
        } 
        
        if(evt.getKeyChar() == 's' || evt.getKeyChar() == 'S')
        {
            teclaS.setBackground(Color.red);
        }   
        
        if(evt.getKeyChar() == 'd' || evt.getKeyChar() == 'D')
        {
            teclaD.setBackground(Color.red);
        }  
        
        if(evt.getKeyChar() == 'f' || evt.getKeyChar() == 'F')
        {
            teclaF.setBackground(Color.red);
        }  
        
        if(evt.getKeyChar() == 'g' || evt.getKeyChar() == 'G')
        {
            teclaG.setBackground(Color.red);
        }  
        
        if(evt.getKeyChar() == 'h' || evt.getKeyChar() == 'H')
        {
            teclaH.setBackground(Color.red);
        }  
        
        if(evt.getKeyChar() == 'j' || evt.getKeyChar() == 'J')
        {
            teclaJ.setBackground(Color.red);
        }  
        
        if(evt.getKeyChar() == 'k' || evt.getKeyChar() == 'K')
        {
            teclaK.setBackground(Color.red);
        }  
        
        if(evt.getKeyChar() == 'l' || evt.getKeyChar() == 'L')
        {
            teclaL.setBackground(Color.red);
        }  
        
        if(evt.getKeyChar() == 'ç' || evt.getKeyChar() == 'Ç')
        {
            teclaCCedilha.setBackground(Color.red);
        }  
        
        if(evt.getKeyChar() == 'z' || evt.getKeyChar() == 'Z')
        {
            teclaZ.setBackground(Color.red);
        }  
        
        if(evt.getKeyChar() == 'x' || evt.getKeyChar() == 'x')
        {
            teclaX.setBackground(Color.red);
        }  
        
        if(evt.getKeyChar() == 'c' || evt.getKeyChar() == 'C')
        {
            teclaC.setBackground(Color.red);
        }  
        
        if(evt.getKeyChar() == 'v' || evt.getKeyChar() == 'V')
        {
            teclaV.setBackground(Color.red);
        }  
        
        if(evt.getKeyChar() == 'b' || evt.getKeyChar() == 'B')
        {
            teclaB.setBackground(Color.red);
        }  
        
        if(evt.getKeyChar() == 'n' || evt.getKeyChar() == 'N')
        {
            teclaN.setBackground(Color.red);
        }  
        
        if(evt.getKeyChar() == 'm' || evt.getKeyChar() == 'M')
        {
            teclaM.setBackground(Color.red);
        }  
        
        if(evt.getKeyChar() == ',')
        {
            teclaVirgula.setBackground(Color.red);
        }  
        
        if(evt.getKeyChar() == '.')
        {
            teclaPonto.setBackground(Color.red);
        }  
        
        if(evt.getKeyChar() == '?')
        {
            teclaInterrogacao.setBackground(Color.red);
        }  
        
        if(evt.getKeyChar() == ' ')
        {
            teclaEspaco.setBackground(Color.red);
        }  
    }//GEN-LAST:event_jTextAreaKeyPressed

    private void jTextAreaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextAreaKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_TAB)
        {
            teclaTab.setBackground(corOriginal); //se a tecla foi liberada, retorna a cor original da tecla
        }
        
        if(evt.getKeyCode() == KeyEvent.VK_SHIFT)
        {
            teclaShift.setBackground(corOriginal);
        }
        
        if(evt.getKeyCode() == KeyEvent.VK_CONTROL)
        {
            teclaCtrl.setBackground(corOriginal);
        }
        
        if(evt.getKeyCode() == KeyEvent.VK_ALT)
        {
            teclaAlt.setBackground(corOriginal);
        }       
        
        if(evt.getKeyCode() == KeyEvent.VK_BACKSPACE)
        {
            teclaBackspace.setBackground(corOriginal);
        }
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            teclaEnter.setBackground(corOriginal);
        }
        
        if(evt.getKeyCode() == KeyEvent.VK_UP)
        {
            teclaSetaCima.setBackground(corOriginal);
        }
        
        if(evt.getKeyCode() == KeyEvent.VK_RIGHT)
        {
            teclaSetaDireita.setBackground(corOriginal);
        }
        
        if(evt.getKeyCode() == KeyEvent.VK_DOWN)
        {
            teclaSetaBaixo.setBackground(corOriginal);
        }
        
        if(evt.getKeyCode() == KeyEvent.VK_LEFT)
        {
            teclaSetaEsquerda.setBackground(corOriginal);
        }
        
        if(evt.getKeyChar() == '\'')
        {
            teclaAspas.setBackground(corOriginal);
        } 
        
        if(evt.getKeyChar() == '1')
        {
            tecla1.setBackground(corOriginal);
        }
        
        if(evt.getKeyChar() == '2')
        {
            tecla2.setBackground(corOriginal);
        }
        
        if(evt.getKeyChar() == '3')
        {
            tecla3.setBackground(corOriginal);
        }
        
        if(evt.getKeyChar() == '4')
        {
            tecla4.setBackground(corOriginal);
        }
        
        if(evt.getKeyChar() == '5')
        {
            tecla5.setBackground(corOriginal);
        }
        
        if(evt.getKeyChar() == '6')
        {
            tecla6.setBackground(corOriginal);
        }
        
        if(evt.getKeyChar() == '7')
        {
            tecla7.setBackground(corOriginal);
        }
        
        if(evt.getKeyChar() == '8')
        {
            tecla8.setBackground(corOriginal);
        }
        
        if(evt.getKeyChar() == '9')
        {
            tecla9.setBackground(corOriginal);
        }
        
        if(evt.getKeyChar() == '0')
        {
            tecla0.setBackground(corOriginal);
        }
        
        if(evt.getKeyChar() == 'q' || evt.getKeyChar() == 'Q')
        {
            teclaQ.setBackground(corOriginal);
        } 
        
        if(evt.getKeyChar() == '-')
        {
            teclaHifen.setBackground(corOriginal);
        }
        
        if(evt.getKeyChar() == 'w' || evt.getKeyChar() == 'W')
        {
            teclaW.setBackground(corOriginal);
        } 
        
        if(evt.getKeyChar() == 'e' || evt.getKeyChar() == 'E')
        {
            teclaE.setBackground(corOriginal);
        } 
        
        if(evt.getKeyChar() == 'r' || evt.getKeyChar() == 'R')
        {
            teclaR.setBackground(corOriginal);
        } 
        
        if(evt.getKeyChar() == 't' || evt.getKeyChar() == 'T')
        {
            teclaT.setBackground(corOriginal);
        } 
        
        if(evt.getKeyChar() == 'y' || evt.getKeyChar() == 'Y')
        {
            teclaY.setBackground(corOriginal);
        } 
        
        if(evt.getKeyChar() == 'u' || evt.getKeyChar() == 'U')
        {
            teclaU.setBackground(corOriginal);
        } 
        
        if(evt.getKeyChar() == 'i' || evt.getKeyChar() == 'I')
        {
            teclaI.setBackground(corOriginal);
        } 
        
        if(evt.getKeyChar() == 'o' || evt.getKeyChar() == 'o')
        {
            teclaO.setBackground(corOriginal);
        } 
        
        if(evt.getKeyChar() == 'p' || evt.getKeyChar() == 'P')
        {
            teclaP.setBackground(corOriginal);
        } 
        
        if(evt.getKeyChar() == 'a' || evt.getKeyChar() == 'A')
        {
            teclaA.setBackground(corOriginal);
        } 
        
        if(evt.getKeyChar() == 's' || evt.getKeyChar() == 'S')
        {
            teclaS.setBackground(corOriginal);
        }   
        
        if(evt.getKeyChar() == 'd' || evt.getKeyChar() == 'D')
        {
            teclaD.setBackground(corOriginal);
        }  
        
        if(evt.getKeyChar() == 'f' || evt.getKeyChar() == 'F')
        {
            teclaF.setBackground(corOriginal);
        }  
        
        if(evt.getKeyChar() == 'g' || evt.getKeyChar() == 'G')
        {
            teclaG.setBackground(corOriginal);
        }  
        
        if(evt.getKeyChar() == 'h' || evt.getKeyChar() == 'H')
        {
            teclaH.setBackground(corOriginal);
        }  
        
        if(evt.getKeyChar() == 'j' || evt.getKeyChar() == 'J')
        {
            teclaJ.setBackground(corOriginal);
        }  
        
        if(evt.getKeyChar() == 'k' || evt.getKeyChar() == 'K')
        {
            teclaK.setBackground(corOriginal);
        }  
        
        if(evt.getKeyChar() == 'l' || evt.getKeyChar() == 'L')
        {
            teclaL.setBackground(corOriginal);
        }  
        
        if(evt.getKeyChar() == 'ç' || evt.getKeyChar() == 'Ç')
        {
            teclaCCedilha.setBackground(corOriginal);
        }  
        
        if(evt.getKeyChar() == 'z' || evt.getKeyChar() == 'Z')
        {
            teclaZ.setBackground(corOriginal);
        }  
        
        if(evt.getKeyChar() == 'x' || evt.getKeyChar() == 'x')
        {
            teclaX.setBackground(corOriginal);
        }  
        
        if(evt.getKeyChar() == 'c' || evt.getKeyChar() == 'C')
        {
            teclaC.setBackground(corOriginal);
        }  
        
        if(evt.getKeyChar() == 'v' || evt.getKeyChar() == 'V')
        {
            teclaV.setBackground(corOriginal);
        }  
        
        if(evt.getKeyChar() == 'b' || evt.getKeyChar() == 'B')
        {
            teclaB.setBackground(corOriginal);
        }  
        
        if(evt.getKeyChar() == 'n' || evt.getKeyChar() == 'N')
        {
            teclaN.setBackground(corOriginal);
        }  
        
        if(evt.getKeyChar() == 'm' || evt.getKeyChar() == 'M')
        {
            teclaM.setBackground(corOriginal);
        }  
        
        if(evt.getKeyChar() == ',')
        {
            teclaVirgula.setBackground(corOriginal);
        }  
        
        if(evt.getKeyChar() == '.')
        {
            teclaPonto.setBackground(corOriginal);
        }  
        
        if(evt.getKeyChar() == '?')
        {
            teclaInterrogacao.setBackground(corOriginal);
        }  
        
        if(evt.getKeyChar() == ' ')
        {
            teclaEspaco.setBackground(corOriginal);
        }  
    }//GEN-LAST:event_jTextAreaKeyReleased

    private void jTextAreaCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextAreaCaretUpdate
       int tamanhoPangrama = textoPangrama.getText().length();  //tamanhoPangrama recebe tamanho total do texto da tela

        if (!backspace) //se Espaço não estiver pressionado faz:
        {
            if(jTextArea.isEnabled()) //se tela está habilitada faz:
            {
                if(indice < tamanhoPangrama) //verifica se índice é menor que o tamanho do pangrama
                {               
                    if(jTextArea.getText().length()!=0) //se o tamanho do texto na tela for diferente de 0 faz:
                    {
                        tamanhoTA = jTextArea.getText().length();  //TamanhoTA recebe tamanho do texto da tela
                        pangr = textoPangrama.getText().charAt(indice);   //pangr recebe letra do texto da tela no índice atual 

                        escrito = jTextArea.getText().charAt(tamanhoTA-1);  //escrito recebe a última letra do texto da tela
                        if (pangr == escrito)     //se os dois forem iguais, calcula acertos e erros
                        {
                            indice++;     
                            acerto = ++acerto;
                        }else{
                            erro = ++erro;
                        }
                        float total = acerto + erro;
                        porcentagemAcerto = (acerto / total)*100;
                    }else{    
                            tamanhoTA = 0;
                }
            }
            
            }else{
                return;
            }             
        }
        
              
        if (acerto == tamanhoPangrama) //verifica se quantidade de acertos = tamanho do pangrama
        {
            JOptionPane.showMessageDialog(this, "Fim de jogo\nAcertos: "+acerto+"\nErros: "+erro
                    +"\nPorcentagem de acertos: "+String.format("%.2f",porcentagemAcerto)+ "%"); //imprime quantidade de erros e acertos
            
            erro = 0; //zera os acertos e erros se o pangrama acabar
            acerto = 0;
            jTextArea.setEnabled(false); // se terminar o pangrama, trava a tela
        }
        
        System.out.printf("Erro: %d \nAcerto: %d\n\n", erro, acerto);    
        //verifica erros e acertos
        
        
        
    }//GEN-LAST:event_jTextAreaCaretUpdate

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acao;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea;
    private javax.swing.JButton tecla0;
    private javax.swing.JButton tecla1;
    private javax.swing.JButton tecla2;
    private javax.swing.JButton tecla3;
    private javax.swing.JButton tecla4;
    private javax.swing.JButton tecla5;
    private javax.swing.JButton tecla6;
    private javax.swing.JButton tecla7;
    private javax.swing.JButton tecla8;
    private javax.swing.JButton tecla9;
    private javax.swing.JButton teclaA;
    private javax.swing.JButton teclaAlt;
    private javax.swing.JButton teclaAspas;
    private javax.swing.JButton teclaB;
    private javax.swing.JButton teclaBackspace;
    private javax.swing.JButton teclaC;
    private javax.swing.JButton teclaCCedilha;
    private javax.swing.JButton teclaCapsLock;
    private javax.swing.JButton teclaCtrl;
    private javax.swing.JButton teclaD;
    private javax.swing.JButton teclaE;
    private javax.swing.JButton teclaEnter;
    private javax.swing.JButton teclaEspaco;
    private javax.swing.JButton teclaF;
    private javax.swing.JButton teclaG;
    private javax.swing.JButton teclaH;
    private javax.swing.JButton teclaHifen;
    private javax.swing.JButton teclaI;
    private javax.swing.JButton teclaInterrogacao;
    private javax.swing.JButton teclaJ;
    private javax.swing.JButton teclaK;
    private javax.swing.JButton teclaL;
    private javax.swing.JButton teclaM;
    private javax.swing.JButton teclaN;
    private javax.swing.JButton teclaO;
    private javax.swing.JButton teclaP;
    private javax.swing.JButton teclaPonto;
    private javax.swing.JButton teclaQ;
    private javax.swing.JButton teclaR;
    private javax.swing.JButton teclaS;
    private javax.swing.JButton teclaSetaBaixo;
    private javax.swing.JButton teclaSetaCima;
    private javax.swing.JButton teclaSetaDireita;
    private javax.swing.JButton teclaSetaEsquerda;
    private javax.swing.JButton teclaShift;
    private javax.swing.JButton teclaT;
    private javax.swing.JButton teclaTab;
    private javax.swing.JButton teclaU;
    private javax.swing.JButton teclaV;
    private javax.swing.JButton teclaVirgula;
    private javax.swing.JButton teclaW;
    private javax.swing.JButton teclaX;
    private javax.swing.JButton teclaY;
    private javax.swing.JButton teclaZ;
    private javax.swing.JLabel textoPangrama;
    // End of variables declaration//GEN-END:variables
}
